<?php

namespace App\Http\Controllers\Api\V1\Admin;



use App\Http\Controllers\Controller;

use App\Buy_ad;
use App\Fstore;
use Carbon\Carbon;
use App\Http\Resources\Admin\AdscatResource;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use eloquentFilter\QueryFilter\ModelFilters\ModelFilters;

class BuyAdApiController extends Controller
{
    public function index(Request $request)
    {
      
if($request->except(['_token'])){
  $stype ="ad";
  $userId = Auth()->user()->id;
  $fstore =  Fstore::withTrashed()->where('created_by_id',$userId)->where('stype', '=', $stype)->first();
  if($fstore)
  {

    if (!is_null($fstore->deleted_at)) {
            $fstore->restore();
        }
 $fstore->update(['sdata' => $request->except(['_token'])]);

  }
  else{
   Fstore::create(['stype' => $stype,'created_by_id' => $userId,'sdata' => $request->except(['_token'])]);
  }


}
  
 return new AdscatResource(Buy_ad::latest()->filter($request->except(['_token']))->with('ad_cats','ad_scats','created_by','profiles:created_by_id,propic')->where('ad_status', '=', 'Approve')->withCount(['adsavc'])->get());
     
    }

     public function afdata(Request $request)
    {
      

  $stype ="ad";
  $userId = Auth()->user()->id;
  $fstore =  Fstore::where('created_by_id',$userId)->where('stype', '=', $stype)->first();

return  response(['fdata' =>$fstore]);
     
    }

     public function afdelete(Request $request)
    {
      

  $stype ="ad";
  $userId = Auth()->user()->id;
  $fstore =  Fstore::where('created_by_id',$userId)->where('stype', '=', $stype)->first();
   $fstore->delete();

return  response(['msg' =>"deleted"]);
     
    }



 public function trendad(Request $request)
    {

$tad = Buy_ad::where('ad_status', '=', 'Approve')->orderBy(DB::raw('aview + asaved'), 'DESC')->limit(5)->with('ad_cats','ad_scats','created_by')->withCount(['adsavc'])->get();

return  response(['tdata' =>$tad]);
     
    }


   public function edit(Buy_ad $buy_ad)
    {

    	 $buy_ad->load('ad_cats','ad_scats','created_by');
      return view('admin.buyads.edit', compact('ad'));
        //
    }

  public function searchad(Request $request)
    {

   

      if($request->get('search')){
        $search = $request->get('search');
         $employees = Buy_ad::latest()
                        ->where('ad_status', 'Approve')
                        ->where(function($query) use ($search){
                            $query->where('adti', 'LIKE', '%'.$search.'%')
                                  ->orWhere('ad_state', 'LIKE', '%'.$search.'%')
                                  ->orWhere('ad_type', 'LIKE', '%'.$search.'%')
                                  ->orWhere('ad_pincode', 'LIKE', '%'.$search.'%');
                        })
                        ->with('ad_cats','ad_scats','created_by')
                        ->limit(15)
                        ->get();
      
   return  response(['data' =>$employees]);
     
  }
   }


     public function adetail(Request $request, Buy_ad $buy_ad)
    {


 $buy_ad = Buy_ad::where('id',$request->id)->first();



        $buy_ad->increment('aview');
    $buy_ad->load('ad_cats','ad_scats','created_by','profiles:created_by_id,propic');
    return response(['ad_details'=>$buy_ad]);

    }



   public function show(Buy_ad $buy_ad)
    {

//$buy_ad->increment('aview');
         $buy_ad->load('ad_cats','ad_scats','created_by');
      return view('admin.buyads.show', compact('buy_ad'));

        //

    }



    public function update(Request $request, Buy_ad $buy_ad)
    {


$start_day = Carbon::now()->format('Y-m-d 00:00:00'); //get a carbon instance with created_at as date
$expiry_day = $start_day->addDays($request['exp_date']); 

$ad->update(['ad_status' => $request['ad_status'], 'exp_date' => $expiry_day]);
     return redirect()->route('admin.buyads.index')->withSuccess('Ad Verified Successfully ');


        //
    }


}
